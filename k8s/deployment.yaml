apiVersion: v1
kind: ConfigMap
metadata:
  name: postgre-init-script
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS products (
      id SERIAL PRIMARY KEY,
      name VARCHAR(100),
      price DECIMAL(10, 2),
      description TEXT,
      short_description TEXT,
      image TEXT
    );

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgre
spec:
  selector:
    matchLabels:
      app: postgre
  template:
    metadata:
      labels:
        app: postgre
    spec:
      initContainers:
        - name: init-postgre
          image: postgres:13.16
          #command: ['sh', '-c', 'until pg_isready -h localhost -p 5432; do sleep 1; done; psql -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /docker-entrypoint-initdb.d/init.sql']
          command: ['sh', '-c', 'until pg_isready -h postgre -p 5432; do sleep 1; done; psql -h postgre -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /docker-entrypoint-initdb.d/init.sql']
          env:
            - name: POSTGRES_PASSWORD
              value: Pg1234
            - name: POSTGRES_USER
              value: ecommerce
            - name: POSTGRES_DB
              value: ecommerce
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: postgre
          image: postgres:13.16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: Pg1234
            - name: POSTGRES_USER
              value: ecommerce
            - name: POSTGRES_DB
              value: ecommerce
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-script
          configMap:
            name: postgre-init-script

---
apiVersion: v1
kind: Service
metadata:
  name: postgre
spec:
  selector:
    app: postgre
  ports:
    - port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fakeshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fakeshop
  template:
    metadata:
      labels:
        app: fakeshop
    spec:
      containers:
        - name: fakeshop
          image: raco21/fake-shop-desafio:v1
          ports:
            - containerPort: 5000
          env:
            - name: POSTGRES_PASSWORD
              value: Pg1234
            - name: DB_HOST
              value: postgre
            - name: DB_USER
              value: ecommerce
            - name: DB_PASSWORD
              value: Pg1234
            - name: DB_NAME
              value: ecommerce
            - name: FLASK_APP
              value: index.py

---
apiVersion: v1
kind: Service
metadata:
  name: fakeshop
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 5000
      nodePort: 30000
  selector:
     app: fakeshop